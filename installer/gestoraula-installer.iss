; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "Gestor de Aula"
#define MyAppShortName "GestorAula"
#define MyAppLCShortName "gestoraula"
#define MyAppVersion "1.0"
#define MyAppPublisher "CloudLabs"
#define MyAppURL "http://indesap.com/"

#define MyAppIcon "gestoraula-icon.ico"

; SERVER CONSTANTS
#define NSSM "nssm.exe"
#define NSSM32 "nssm-x86.exe"
#define NSSM64 "nssm.exe"
#define NODE64 "node_x64.msi"
#define NODE "node_x64.msi"
#define USERPROFILE "C:\Users\Win7VM"
#define SERV_INI_BAT "winstart-server.bat"

; DB CONSTANTS
#define MYSQL "mysql-installer-community-8.0.0.0-dmr.msi"
#define NETFRAMEWOK "dotNetFx40_Full_x86_x64.exe"

#define MYSQL_DIR "C:\MySQL\MySQL_Server_8"
#define MYSQL_EXTRACT_DIR "C:\mysql5.7"

#define ROOT_PASS "C10UD_L485"
#define DB_MODEL_FILE "gestor_aula.sql"
#define BAT_FILE "db_init.bat"
 
[Setup]
AppId={{BD1C42D0-5E3C-4E99-9D08-D5DAC912D664}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName=C:\{#MyAppShortName}
DisableDirPage=yes
DefaultGroupName={#MyAppName}
DisableProgramGroupPage=yes
;LicenseFile={#USERPROFILE}\Downloads\LICENSE.txt
;InfoBeforeFile={#USERPROFILE}\Downloads\before.txt
;InfoAfterFile={#USERPROFILE}\Downloads\after.txt
OutputDir={#USERPROFILE}\Desktop
OutputBaseFilename={#MyAppShortName}-Installer
SetupIconFile={#SourcePath}\{#MyAppIcon}
Compression=lzma
SolidCompression=yes
PrivilegesRequired=poweruser


[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"


[Files]
Source: "{#SourcePath}\{#MyAppIcon}"; DestDir: "{app}"; Flags: ignoreversion

; DB FILES
Source: "{#SourcePath}\installers\{#NETFRAMEWOK}"; DestDir: "{tmp}"
Source: "{#SourcePath}\installers\{#MYSQL}"; DestDir: "{tmp}";
Source: "{#SourcePath}\batch\{#BAT_FILE}"; DestDir: "{tmp}"
Source: "{#SourcePath}\db\{#DB_MODEL_FILE}"; DestDir: "{tmp}";

; SERVER FILES
Source: "{#SourcePath}\installers\{#NODE64}"; DestDir: "{app}"; Flags: ignoreversion
Source: "{#SourcePath}\installers\{#NSSM64}"; DestDir: "{app}"; Flags: ignoreversion
Source: "{#SourcePath}\installers\{#NSSM32}"; DestDir: "{app}"; Flags: ignoreversion
Source: "{#SourcePath}\{#MyAppShortName}\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs
Source: "{#SourcePath}\batch\{#SERV_INI_BAT}"; DestDir: "{app}"; Flags: ignoreversion

;[Icons]
;Name: "{commonprograms}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; IconFilename: "{app}\{#MyAppIcon}"

; Here's an example of how you could use a start menu item for just Chrome, no batch file
;Name: "{group}\{#MyAppName}"; Filename: "{pf32}\Google\Chrome\Application\chrome.exe"; Parameters: "--app=http://localhost:5566 --user-data-dir=%APPDATA%\{#MyAppShortName}\"; IconFilename: "{app}\{#MyAppIcon}"


[Run]
; NET Framework
Filename: "{tmp}\{#NETFRAMEWOK}";Check:FrameworkIsNotInstalled;Parameters:" /qr";WorkingDir:{tmp};Flags:runhidden;StatusMsg:Installing .Net Framework

; MYSQL
Filename: msiexec.exe; Parameters: " /i ""{tmp}\{#MYSQL}"" /qr";StatusMsg:Unpacking Mysql 5.7.17.0 installation;Flags: runhidden waituntilterminated; AfterInstall: MyAfterFunc
Filename: "{pf}\MySQL\MySQL Installer for Windows\MySQLInstallerConsole.exe"; \
Parameters: " install server;8.0.0;x64:*:type=config;openfirewall=true;enable_tcpip=true;rootpasswd={#ROOT_PASS};installdir=""{#MYSQL_DIR}"" -silent"; \
StatusMsg: Installing MySQL Server;Flags: runhidden

Filename: "{tmp}\{#BAT_FILE}"; Parameters:"{#MYSQL_DIR} {#ROOT_PASS} ""{tmp}\{#DB_MODEL_FILE}"""; \
Flags: runhidden waituntilterminated; AfterInstall: MyAfterFunc2; StatusMsg: Creating database model...

; SERVER
Filename: "{sys}\msiexec.exe"; Parameters: "/passive /i ""{app}\{#NODE}""";

; Add Firewall Rules
Filename: "{sys}\netsh.exe"; Parameters: "advfirewall firewall add rule name=""Node In"" program=""{pf64}\nodejs\node.exe"" dir=in action=allow enable=yes"; Flags: runhidden;
Filename: "{sys}\netsh.exe"; Parameters: "advfirewall firewall add rule name=""Node Out"" program=""{pf64}\nodejs\node.exe"" dir=out action=allow enable=yes"; Flags: runhidden;
Filename: "{app}\{#NSSM}"; Parameters: "install {#MyAppShortName} ""{pf64}\nodejs\node.exe"" ""{app}\bin\server.js"""; Flags: runhidden;
Filename: "{sys}\net.exe"; Parameters: "start {#MyAppShortName}"; Flags: runhidden;

[UninstallRun]
Filename: "{sys}\net.exe"; Parameters: "stop {#MyAppShortName}"; Flags: runhidden;
Filename: "{app}\{#NSSM}"; Parameters: "remove {#MyAppShortName} confirm"; Flags: runhidden;
Filename: "{sys}\net.exe"; Parameters: "stop {#MyAppLCShortName}"; Flags: runhidden;

Filename: "{sys}\netsh.exe"; Parameters: "advfirewall firewall delete rule name=""Node In"" program=""{pf64}\nodejs\node.exe"""; Flags: runhidden;
Filename: "{sys}\netsh.exe"; Parameters: "advfirewall firewall delete rule name=""Node Out"" program=""{pf64}\nodejs\node.exe"""; Flags: runhidden;

Filename: "{sys}\msiexec.exe"; Parameters: "/passive /x ""{app}\{#NODE}""";

Filename: "{sys}\rmdir"; Parameters: "-r ""{app}""";

[code]
function FrameworkIsNotInstalled: Boolean;
begin
  Result := not RegKeyExists(HKEY_LOCAL_MACHINE, 'SOFTWARE\Microsoft\.NETFramework\policy\v4.0');
end;

procedure MyAfterFunc;
begin
  Log('Wating for Mysql');
  Sleep(50000);
  Log('Continue to Intall');
end;

procedure MyAfterFunc2;
begin
  Log('Wating for Commands');
  Sleep(10000);
  Log('Continue to Intall');
end;